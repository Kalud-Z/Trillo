/* :root {  //this is like the global parent ! all stuff in here , accessible to all elements.
    --color-primary : #eb2f64;   //this is a custom property. it is a CSS variable.
    --color-primary-light : #FF3366;   
    --color-primary-dark : #BA265D;

    --color-grey-light-1: #faf9f9 ;
    --color-grey-light-2: #f4f2f2 ;
    --color-grey-light-3: #f0eeee ;
    --color-grey-light-4: #ccc ;
    
    --color-grey-dark-1: #333 ;
    --color-grey-dark-2: #777 ;
    --color-grey-dark-3: #999 ;
}
  */




//################################################## LOGO ##############################################
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}




//################################################## SEARCH ##############################################
.search {
    flex: 0 0 40%;

    display: flex;
    align-items: center;     // centers elements along the cross axis
    justify-content: center; // centers elements along the main axis

    @media only screen and (max-width: $bp-500) {
        order: 1;   // now this flex item hass order 1  and all other have order 0 (by default) , so it goes to the end of flex container.
        flex:0 0 100%;
        background-color: var(--color-grey-light-2);

    }

    &__input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border:none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .4s;
        margin-right: -3rem;

        &:focus {
            outline : none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {  // the alter the placeholder of a input element !
            font-weight: 100;
            color : var(--color-grey-light-4);
        }
    }

    &__input:focus + &__button {  // because they are siblings
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active { transform: translateY(2px);}  // active = clicked
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);   // this is how you change the color of a SVG
    }
}




//################################################## USER-NAV ##############################################
.user-nav {
    align-self: stretch;   // it stretches the height of the div to match  

    display: flex;
    align-items: center;

    & > * {   // select all direct children
        display: flex;
        align-items: center;

        height: 100%;
        padding:0 2rem;
        cursor: pointer;

        &:hover { background-color: var(--color-grey-light-2); }
    }

    
    &__icon-box {
        position: relative;  // because its chid is absolute-positioned relatively to it.
    }


    &__icon {
        height: 2.35rem;
        width: 2.35rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 100px;
        border:.7px solid var(--color-grey-light-2);
        background-color: var(--color-primary);
        color: white;

        position: absolute;
        top: 1.1rem;
        left: 3rem;
        z-index: 333;

        display: flex;
        align-items: center;     // center the text vertically
        justify-content: center; // center the text horizontally
    }


    &__user {
        
    }


    &__user-name {

    }

    &__user-photo {
        height: 4rem;
        border-radius: 50%;
        margin-right: 1rem;
    }


}


//################################################## SIDE NAV ##############################################

.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-900) {
        display: flex;
        margin:0;
    }


    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;

            @media only screen and (max-width: $bp-900) {
                margin-bottom:0 ;
            }

        }

        


    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;   // so it has excatly the same height as its parent. the list item.
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        transition: transform .1s,
                    width .3s cubic-bezier(1,0,0,1),
                    background-color .1s; // val1:transition-duration  val2:transition-delay
        
    }

    &__item:hover::before,       // when oyu hover the item , so stuff to the before element
    &__item--active::before {    //this modifier class. can  apply this properties only to an element that ALREADY HAS a ::before element !
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }




    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.4rem 3rem;

        display: flex;
        align-items: center;

        position: relative;
        z-index: 10; //z index only works if we have specified position

        @media only screen and (max-width:$bp-584) {
            flex-direction: column;
            // padding: 1rem;
            // align-items: center;
            // justify-content: center;
        }

    }

    &__icon {
        height: 1.75rem;
        width: 1.75rem;
        margin-right: 2rem;
        fill: currentColor;  // color of the parent

        @media only screen and (max-width:$bp-584) {
            margin-right: 0;
            margin-bottom: 0.4rem;
        }

    }


}



//################################################## LEGAL TEXT ##############################################
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-900) {
        display: none;

            /* flex-direction: column; */
    justify-content: space-around;

    }
}




//################################################## GALLERY ##############################################
.gallery {
    display: flex;

    &__photo {
        width: 100%;
        display: block; // otherwise , there will be a small space underneath image when the img is an inline-element
    }

}




//################################################## OVERVIEW ##############################################
.overview {
    display: flex;
    align-items: center;
    border-bottom: var(--line);

    &__heading {
        font-size:2.5rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        
        @media only screen and (max-width:$bp-584) {
            font-size: 1.8rem;
            padding: 1rem 1.5rem;
            letter-spacing: .5px;

        }


    }

    &__stars {
        margin-right: auto; // when used with flexbox , it gives it the maximum possible margin. of course without 'crushin' the siblings !
        display: flex;     // this removes the lil white space underneath the children , which are SVG elements. and they behave like inline elements , a bit like text. and causes that lil white space. U can fix this also by => line-height:0;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill : var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: white;
        margin-left: 3rem;
        align-self: stretch;  // this overwrites the value set on its parent of center-alignment
        padding:0 2rem;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        
        @media only screen and (max-width:$bp-584) {
            padding: 0 1rem;   
            margin-left: 1.5rem;
        }

        &-average {
            font-size: 2.25rem;
            font-weight: 300;
            margin-bottom: 0rem;

            @media only screen and (max-width:$bp-584) {
                font-size: 1.8rem; 
                font-weight: 800;
            }

        }

        &-count {
            font-size: .8rem;
            text-transform: uppercase;

            @media only screen and (max-width:$bp-584) {
                font-size: 0.4rem;
            }

        }

    }



}



//################################################## BUTTONS ##############################################
.btn-inline {
    border: none;
    color : var(--color-primary);
    font-size:inherit;   // so when you use it in multiple place, it will be the same as its corresponding father.
    border-bottom: 1px solid currentColor;  // so the color  is ALWAYS like the text. Otherwise , you would have to add extra line in hover as well ! or in other states
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: .2s;


    & span {
        margin-left: 3px;
        transition: all 0.3s;
        font-family: sans-serif;
    }
    
    &:hover {
        color: var(--color-grey-dark-1);
        span {
            margin-left: 8px;
        }
    }
    
    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }

}


@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.03);
        box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.274);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}


button[name='showAll'] {
        @media only screen and (max-width: $bp-650) {
            margin-bottom: 1rem;
        }
      }





//################################################## Paragraph ##############################################
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}



//################################################## List ##############################################
.list {
    list-style: none;
    margin:3rem 0;
    margin-bottom: 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap;  //The flex container is multi-line

    @media only screen and (max-width:$bp-900) {
        padding: 2rem;
        margin: 2rem 0;
    }


    &__item {
        flex: 0 0 50%;
        margin-bottom: .7rem;
    }

    &__item::before {
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        //older browsers
        // background-image: url(../img/chevron-thin-right.svg);
        // background-size: cover;
 
        
        //new browsers - masks - (better approach)
        background-color: var(--color-primary);
        -webkit-mask-image: url(../img/chevron-thin-right.svg);
        -webkit-mask-size: cover; //the imgae fits its container
        mask-image: url(../img/chevron-thin-right.svg);
        mask-size: cover; //the imgae fits its container

    }   

}





//################################################## Recommend ##############################################
.recommend {
    font-size: 1.3rem;
    color : var(--color-grey-dark-3);
    margin-top: 5rem;

    display: flex;
    align-items: center;   // align content horizontally

    @media only screen and (max-width:$bp-900) {
        margin-top: 1rem;
    }

    &__count {
        margin-right: auto;  // it pushes on the siblings to the right, as far as possible , to create as much margin as possible. !
    }

    &__friends {
        display: flex;
        align-items: center;  // you HAVE to put display:flex
    }

    &__photo {
        // display:flex;
        box-sizing: content-box;  //this is one of the few occasions where we need this. which is the dafault value. cause otherwise the border size gonna be deducted from photo's width !
        height : 5rem;
        width : 5rem;
        border-radius: 50%;
        border: 1.8px solid white;
        transition: all 0.4s;
        transform: scale(0.9);
        &:not(:last-child) { margin-right : -1.4rem;}


        &:hover {transform: scale(1);}
    }
}



//################################################## Reviews ##############################################

.review {
    position: relative;
    background-color: white;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    overflow: hidden;

    @media only screen and (max-width:$bp-900) {
        margin-bottom: 2.5rem;
    }

    @media only screen and (max-width:$bp-650) {
        margin-bottom: 1rem;
    }



    &__text {
        z-index: 10;
        position: relative;  // z index never works without setting the position !!!
    }

    &__user {
        margin-top: 2rem;
        display: flex;
        align-items: center;
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 2rem;

    }

    &__user-box {
        margin-right: auto;

    }

    &__user-date {
        font-size: 1rem;
        color : var(--color-grey-dark-3);
    }

    &__user-name {
        text-transform: uppercase;
        font-weight: 800;
        margin-bottom: .5rem;
    }


    &__rating {
        font-size: 2.2rem;
        font-weight: 300;
        color: var(--color-primary);
    }

    &::before {
        content: "\201C";
        font-size: 22rem;
        position: absolute;
        top: -9.3rem;
        left: -1rem;
        color : var(--color-grey-light-3);
        font-family: sans-serif;
        // opacity: 0.5;
        z-index: 1; // give it a value lower than the z index value of the element you wanna hide it behind.
    }


}





//################################################## CTA ##############################################

.cta {
    padding: 3.5rem 0;
    text-align: center;

     @media only screen and (max-width:$bp-900) {
        padding: 2.5rem 0;
    }


    &__book-now {
        font-size: 1.5rem;
        font-weight: 300;;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}



.btn {
    font-size: 1.5rem;
    border: none;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    background-image: linear-gradient(to right, var(--color-primary-light) , var(--color-primary-dark) );
    padding: 2rem 4rem;
    overflow: hidden;
    position: relative;
    width: 20rem;
    transition: all .4s;
    color: white;
    cursor: pointer;

    & > * {   //select all of the child elements
        position: absolute;
        left:50%;
        transform: translate(-50%,-50%);
        width: 100%;
        transition: all .4s;
    }

    &__visible { top:50%; }

    &__invisible { top:-80%; }

    &:hover  {
        background-image: linear-gradient(to right, rgb(45, 45, 219) , var(--color-primary-dark) );
        .btn__visible   { top:150%;  }
        .btn__invisible { top:50%; }
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }

}








































